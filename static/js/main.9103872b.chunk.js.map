{"version":3,"sources":["components/Header.jsx","components/Content.jsx","components/Avatar.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Component","Content","src","App","canvasClassName","params","id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0VA0BeA,G,uLApBP,OACG,yBAAKC,UAAW,UACZ,yBAAKA,UAAW,QAChB,uBAAGC,KAAK,UAAS,wBAAID,UAAU,WAAd,cAEjB,yBAAKA,UAAW,QAChB,uBAAGC,KAAK,aAAY,wBAAID,UAAU,WAAd,cAEpB,yBAAKA,UAAW,QAChB,uBAAGC,KAAK,YAAW,wBAAID,UAAU,WAAd,kB,GAZbE,cC8CNC,G,MC9CMD,Y,uLDOb,OAEI,yBAAKF,UAAW,WAEhB,yBAAKA,UAAU,SACX,yBAAKA,UAAU,OACf,wCACd,6ZAWc,yBAAKA,UAAU,OACX,yBAAKI,IAAI,sCAKjB,yBAAKJ,UAAW,aAIhB,yBAAKA,UAAW,iB,GAnCNE,cEwEPG,E,iLAjEb,OAEE,yBAAKL,UAAU,OACjB,yBAAKA,UAAU,aACf,4BAAQA,UAAU,cAClB,kBAAC,EAAD,OAIC,kBAAC,IAAD,CACOM,gBAAgB,aACVC,OAAQ,CACnB,UAAa,CACT,OAAU,CACN,MAAS,KAEb,KAAQ,CACJ,MAAS,IAIjB,cAAiB,CACb,OAAU,CACN,QAAW,CACP,QAAU,EACV,KAAQ,WAErB,QAAU,CACT,QAAS,EACT,KAAO,QAER,MAAQ,CACP,KAAO,CACN,YAAc,CACb,SAAY,aAgBnB,yBAAKC,GAAG,QAAQR,UAAU,UAE1B,kBAAC,EAAD,Y,GAvDkBE,aCKEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9103872b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.css';\n\nclass Header extends Component{\n\n    render(){\n        return(\n           <div className= \"header\">\n               <div className= \"line\" >\n               <a href=\"#about\"><h4 className=\"options\" >About Me</h4></a>\n               </div>\n               <div className= \"line\" >\n               <a href=\"#proyects\"><h4 className=\"options\" >Proyects</h4></a>\n               </div>\n               <div className= \"line\" >\n               <a href=\"#contact\"><h4 className=\"options\" >Contact</h4></a>\n               </div>\n\n            </div>\n    \n\n        )\n    }\n\n} \n\nexport default Header","import React, { Component } from 'react';\nimport './content.css';\n\nclass Content extends Component{\n\n\n    \n\n    render(){\n\n        return(\n\n            <div className= \"allInfo\">\n\n            <div className=\"about\">\n                <div className=\"txt\">\n                <h1>About Me</h1>\n\t\t<h3>I have always been interested in technology\n        and in being able to create important\n        changes with it, I am currently studying the\n        degree in Computer Systems Engineering.\n        I am outgoing, responsible, creative,\n        efficient and effective, I like to learn\n        from each objective that is presented. \n        I am open to learn any type of programming language. \n        Properly handle stress in any environment.\n\t\t</h3>\t\n                </div>\n                <div className=\"img\">\n                    <img src='https://i.ibb.co/0B9V6NX/me.jpg'/>\n                </div>\n            </div>\n\n\n            <div className= \"proyects\">\n\n            </div>\n\n            <div className= \"Contact\"></div>\n\n            </div>\n\n        )\n    }\n\n\n\n}\n\nexport default Content","import React, { Component } from 'react';\nimport './avatar.css'\n\nclass Avatar extends Component {\n\n\n    render(){\n        return(\n\n            <div className=\"avatarImg\">\n                <img src='https://i.ibb.co/0B9V6NX/me.jpg'/>\n\n            </div>\n\n        )\n\n    }\n\n\n}\n\nexport default Avatar","import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Header from './components/Header';\nimport Avatar from './components/Avatar';\nimport Content from './components/Content';\n\nclass App extends Component {\n\n  render(){\n  return (\n\n    <div className=\"App\">\n\t\t<div className=\"principal\">\n\t\t<header className=\"App-header\">\n\t\t<Header/>\n\t\t</header>\n\n\n\t\t\t<Particles \n\t\t        canvasClassName=\"background\"\n                params={{\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 170\n\t        },\n\t        \"size\": {\n\t            \"value\": 1\n\t        }\n      },\n      \n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t\t\t\t},\n\t\t\t\t\"onclick\":{\n\t\t\t\t\t\"enable\":false,\n\t\t\t\t\t\"mode\":\"push\"\n\t\t\t\t},\n\t\t\t\t\"modes\":{\n\t\t\t\t\t\"grab\":{\n\t\t\t\t\t\t\"line_linked\":{\n\t\t\t\t\t\t\t\"distance\": 100\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t        }\n\t\t}\t\n\t}} \n\t\n\t/>\n\n\n\n\n\t\t</div>\n     \n<div id=\"about\" className=\"cubrir\">\n\n<Content/>\n\n</div>\n\t\t\n\n    </div>\n\n\n  );\n\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}